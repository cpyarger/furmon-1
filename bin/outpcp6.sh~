#!/bin/bash
# pflint Fri 17 May 2013 07:49:14 AM EDT 
# packs html into String and makes changes at the end...
# 
# this is the origin point:
origin="http://www.w3.org/TR/html4/strict.dtd"
#
# the following evaluates the string... go to line 54 for more stuff...
read -d '' String <<"EOF"
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head><meta http-equiv="refresh" content="10;url=http://10.0.1.45/furmon/out.html">

<meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">
<title>Pellergy Control For Furmon Site</title></head>
<body>
<img style="width: 847px; height: 642px;" alt="Drawing of control plate should be here" src="http://docbox.flint.com/%7Eflint/furmon/Pellergy_Control_blank_plate.png">
<table style="position: relative; z-index: 1; left: 120px; top: -510px; width: 606px; height: 179px;" cellpadding="2" cellspacing="2">

<tbody>
<tr>
<td colspan="2" rowspan="1" style="position: relative; width: 305px;"><big> Purging </big><br>
</td>
<td colspan="3" rowspan="1" style="position: relative; width: 257px;"><big> 1000 </big><br>
</td>
</tr>
<tr>
<td style="position: relative; width: 150px;">T <br>
</td>
<td style="position: relative; width: 150px;">2 <br>
</td>
<td style="position: relative; width: 140px;">345 &#8457; <br>
</td>
<td style="position: relative; width: 140px;">F <br>
</td>
<td style="position: relative; width: 140px;">10<br>
</td>
</tr>
<tr>
<td colspan="2" rowspan="1" style="position: relative; width: 103px;">No Alarm<br>
</td>
<td colspan="3" rowspan="1" style="position: relative; width: 257px;">All is well<br>
</td>
</tr>
<tr>
<td style="position: absolute; top: 542px; left: 190px;">Param<br>
</td>
<td style="position: absolute; top: 542px; left: 343px;">Test<br>
</td>
<td style="position: absolute; top: 542px; left: 491px;">Enabl<br>
</td>
<td style="position: absolute; top: 541px; left: 643px;">Feed</td>
</tr>
</tbody>
</table>
<br>
<br>
</body></html>
EOF
# echo "this is the string"
echo "$String" > in.html
rm -rf outpcp.html
newrd1=$1
newrd2=$2
t11="test 1,1"
t12="test 1,2"
#
# very last line erases all extra test files
# cat start.html |sed -r "s|test .,.|  |g" > outpcp.html;cp outpcp.html start.html
# echo "First change"; echo ${String/Purging/banana} > /dev/null
# target="1000";change="2000"; echo "First change"; changed=${String/$target/$change}; String=$changed 
$ target=$1;change=$2; echo "First change"; changed=${String/$target/$change}; String=$changed 
# target="Purging";change="banana"; echo "First change"; changed=${String/$target/$change}; String=$changed 
# t1="Purging";c1="banana"; echo "Second change"; change=${String/$t1/$c1}; String=$change 
# echo "Second change";echo "${change/Purging/banana}" > out.html
echo "0 is $0"
echo "Number of Arguments are $#"
echo $@
# target=$1;change=$2; echo "First change"; changed=${String/$target/$change}; String=$changed 
# target=$3;change=$4; echo "Next change"; changed=${String/$target/$change}; String=$changed 
# make it a loop...
# n=1;t="$"$n; c="$"$((1+1))
for n in 1 3
do
	t="$"$n; c="$"$((n+1));
	echo "$t  $c"
	target=$t;change=$c; echo "Next change $t to $c"; changed=${String/$target/$change}; String=$changed 
done
echo "$String" > out.html
echo "the difference between these strings is"
# diff -y in.html out.html | less -S
diff in.html out.html | less -NS
# sleep 5
echo "Type cntrl -c to stop firefox now"
firefox 2>/dev/null out.html
